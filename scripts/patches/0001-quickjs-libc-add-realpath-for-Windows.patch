--- quickjs-libc.c	2021-06-02 14:00:27.442481498 +0800
+++ patched.c	2021-06-02 13:52:11.000000000 +0800
@@ -132,6 +132,29 @@
 static uint64_t os_pending_signals;
 static int (*os_poll_func)(JSContext *ctx);
 
+static char *_realpath(const char *path, char *resolved_path)
+{
+#if defined(_WIN32)
+    BOOL allocated = FALSE;
+    if(resolved_path == NULL)
+    {
+        resolved_path = (char*) malloc(PATH_MAX);
+        allocated = TRUE;
+    }
+    DWORD len = GetFullPathNameA(path, PATH_MAX, resolved_path, NULL);
+    if(!len || len >= PATH_MAX)
+    {
+        if(allocated)
+            free(resolved_path);
+        return NULL;
+    }
+    resolved_path[len] = '\0';
+    return resolved_path;
+#else
+    return realpath(path, resolved_path);
+#endif // _WIN32
+}
+
 static void js_std_dbuf_init(JSContext *ctx, DynBuf *s)
 {
     dbuf_init2(s, JS_GetRuntime(ctx), (DynBufReallocFunc *)js_realloc_rt);
@@ -530,19 +553,19 @@
         return -1;
     if (!strchr(module_name, ':')) {
         strcpy(buf, "file://");
-#if !defined(_WIN32)
+//#if !defined(_WIN32)
         /* realpath() cannot be used with modules compiled with qjsc
            because the corresponding module source code is not
            necessarily present */
         if (use_realpath) {
-            char *res = realpath(module_name, buf + strlen(buf));
+            char *res = _realpath(module_name, buf + strlen(buf));
             if (!res) {
                 JS_ThrowTypeError(ctx, "realpath failure");
                 JS_FreeCString(ctx, module_name);
                 return -1;
             }
         } else
-#endif
+//#endif
         {
             pstrcat(buf, sizeof(buf), module_name);
         }
@@ -2661,7 +2684,7 @@
     path = JS_ToCString(ctx, argv[0]);
     if (!path)
         return JS_EXCEPTION;
-    res = realpath(path, buf);
+    res = _realpath(path, buf);
     JS_FreeCString(ctx, path);
     if (!res) {
         buf[0] = '\0';
